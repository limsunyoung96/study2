# read24.txt

--과제
SOLID 이 방의 끝을 잡고가 아니라

OOP에서 SOLID 원칙을
-- 5계층
-- SOLID 원칙
(https://blog.martinwork.co.kr/theory/2017/12/10/oop-solid-principle.html)
단일 책임 원칙(Single responsibility principle) - 약어: SRP
	 모든 Class는 하나의 책임만 가지며, 그 책임은 완전히 캡슐화되어야 함
	 
개방 폐쇄 원칙(Open/closed principle) - 약어: OCP
	개방폐쇄 원칙은 클래스, 모듈 함수 등의 소프트웨어 개체는 확장에 대해 열려있어야 하고, 수정에 대해서는 닫혀 있어야 한다

리스코프 치환 원칙(Liskov substitution principle) - 약어: LSP
	 부모 Class가 들어갈 자리에 자식 Class를 넣어도 잘 구동되어야 한다 

인터페이스 분리 원칙(Interface segregation principle) - 약어: ISP
	클라이언트는 자신이 사용하지 않는 메소드에 의존 관계를 맺으면 안된다

의존관계 역전 원칙(Dependency inversion principle) - 약어: DIP
	- 상위 모듈은 하위 모듈에 종속되어서는 안된다. 둘 다 추상화에 의존해야 한다.
	- 추상화는 세부사항에 의존하지 않는다. 세부사항은 추상화에 의해 달라져야 한다.
